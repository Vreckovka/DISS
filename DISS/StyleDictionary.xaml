<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:DISS"
                    xmlns:wpf="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:vsm ="clr-namespace:System.Windows;assembly=PresentationFramework"
                    x:Class="DISS.StylesDictionary">

    <Color x:Key="BackgroudColor" R="21" G="18" B="29" A="255"/>
    <Color x:Key="BackgroudColor2" R="26" G="22" B="34" A="255"/>
    <Color x:Key="DefaultRedColor" R="254" G="27" B="72" A="255"/>
    <Color x:Key="DefaultRedTransparentColor" R="254" G="27" B="72" A="50"/>
    <Color x:Key="DefaultWhiteColor" R="229" G="223" B="255" A="255"/>
    <Color x:Key="DefaultWhiteColorTransparent" R="179" G="173" B="205" A="10"/>

    <SolidColorBrush x:Key="TopWindowsColor" Color="{DynamicResource BackgroudColor2}"/>
    <SolidColorBrush x:Key="DefaultRedBrush" Color="{DynamicResource DefaultRedColor}"/>
    <SolidColorBrush x:Key="DefaultRedTransparentBrush" Color="{DynamicResource DefaultRedTransparentColor}"/>
    <SolidColorBrush x:Key="DefaultWhiteBrush" Color="{DynamicResource DefaultWhiteColor}"/>
    <SolidColorBrush x:Key="DefaultWhiteTransparentBrush" Color="{DynamicResource DefaultWhiteColorTransparent}"/>

    <LinearGradientBrush x:Key="BackgroudBrush" StartPoint="0,0" EndPoint="0,3">
        <GradientStop Color="{DynamicResource BackgroudColor}" 
                      Offset="0.23" />
        <GradientStop Color="{DynamicResource BackgroudColor2}" Offset="0.5" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BackgroudPageBrush" StartPoint="0,0" EndPoint="0,3">
        <GradientStop Color="{DynamicResource BackgroudColor}" 
                      Offset="0.23" />
        <GradientStop Color="{DynamicResource BackgroudColor2}" Offset="0.8" />
    </LinearGradientBrush>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource DefaultRedBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource DefaultWhiteBrush}"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="5" ShadowDepth="2" Color="#FF110D32" Opacity="1"/>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Path x:Name="PathIcon"
                                  Data="{TemplateBinding Content}"/>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource DefaultRedBrush}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource DefaultRedTransparentBrush}"/>
                            <Setter TargetName="PathIcon" Property="Tag" Value="Play" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlayButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Path x:Name="PathIcon"
                             Data="{TemplateBinding Content}"/>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource DefaultRedBrush}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource DefaultRedTransparentBrush}"/>
                            <Setter TargetName="PathIcon" Property="Tag" Value="Play" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RefreshButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="5" ShadowDepth="2" Color="Black" Opacity="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4" Background="{TemplateBinding Background}" Padding="7">
                        <Grid Background="Transparent">

                            <Path x:Name="PathIcon"
                            Stretch="Fill"
                            Data="M346.8,61.2C311.1,22.95,260.1,0,204,0C91.8,0,0,91.8,0,204s91.8,204,204,204c94.35,0,173.4-66.3,196.35-153H346.8
			                      C326.4,313.65,270.3,357,204,357c-84.15,0-153-68.85-153-153c0-84.15,68.85-153,153-153c43.35,0,79.05,17.85,107.1,45.9
			                      l-81.6,81.6H408V0L346.8,61.2z"
                            Width="20"
                            Height="20"
                            Fill="{DynamicResource DefaultWhiteBrush}"/>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource DefaultRedBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource DefaultRedBrush}" />
                            <Setter TargetName="PathIcon" Property="Fill" Value="White" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StopButton" TargetType="{x:Type Button}" >
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="5" ShadowDepth="2" Color="Black" Opacity="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4" Background="{TemplateBinding Background}" Padding="7">
                        <Grid Background="Transparent">

                            <Path x:Name="PathIcon"
                            Stretch="Fill"
                            Data="M214.781,0H17.898C8.013,0,0,8.014,0,17.898v196.883
		                                c0,9.885,8.013,17.898,17.898,17.898h196.883c9.886,0,17.898-8.013,17.898-17.898V17.898C232.679,8.014,224.666,0,214.781,0z"
                            Width="20"
                            Height="20"
                            Fill="{DynamicResource DefaultWhiteBrush}"/>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource DefaultRedBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource DefaultRedBrush}" />
                            <Setter TargetName="PathIcon" Property="Fill" Value="White" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource DefaultWhiteBrush}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontFamily" Value="Arial"/>
    </Style>


    <Style x:Key="ButtonStyle" TargetType="Path">
        <Setter Property="Fill" Value="{DynamicResource DefaultWhiteBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Fill" Value="#fe1b48"/>

                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect ShadowDepth="0" Color="#FFFF7744" Opacity="1" BlurRadius="2"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LabelStyle" TargetType="Label">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CleanSeparator" TargetType="wpf:Separator">
        <Setter Property="IsEnabled" Value="True" />
        <Setter Property="Stroke" Value="{DynamicResource DefaultWhiteTransparentBrush}"/>
    </Style>


    <!--Window style    aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa              -->
    <Style x:Key="ButtonStyleWindows" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource DefaultWhiteBrush}" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  Name="Border" Background="{TemplateBinding Background}" Padding="5">
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="Background" Value="{DynamicResource DefaultRedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
       TargetType="{x:Type CheckBox}" >
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="FocusVisualStyle"
          Value="{DynamicResource CheckBoxFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate   
                 TargetType="{x:Type CheckBox}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter 
                                Content="{TemplateBinding Content}" 
                                ContentTemplate="{TemplateBinding ContentTemplate}" 
                                Margin="{TemplateBinding Padding}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <Border BorderBrush="{DynamicResource DefaultWhiteBrush}" BorderThickness="1">
                                <Border.Background>
                                    <VisualBrush Opacity="1">
                                        <VisualBrush.Visual>
                                            <Path Name="path" />
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Border.Background>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="path" Property="Data" Value="M 0 5 L 3 10 10 0" />
                            <Setter TargetName="path" Property="Stroke" Value="{DynamicResource DefaultWhiteBrush}" />
                            <Setter TargetName="path" Property="StrokeThickness" Value="2" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground"   Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="CaretBrush" Value="{DynamicResource DefaultWhiteBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource DefaultWhiteBrush}"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{DynamicResource DefaultWhiteBrush}"/>
        <Setter Property="MinWidth" Value="45"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Border CornerRadius="1" BorderThickness="0,0,0,1.2" BorderBrush="{Binding RelativeSource={RelativeSource AncestorType=TextBox},Path=BorderBrush}">
                            <Border.Background>
                                <SolidColorBrush Color="Transparent" />
                            </Border.Background>

                            <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="GhostWhite"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Padding="0,0,10,10" CornerRadius="50">
                        <Grid>
                            <Border CornerRadius="10" Background="{DynamicResource BackgroudBrush}">
                                <Border.Effect>
                                    <DropShadowEffect Color="Black" ShadowDepth="10" Opacity="0.3" />
                                </Border.Effect>
                            </Border>

                            <!--The main window content-->
                            <Grid>
                                <Grid.RowDefinitions >
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <Grid Panel.ZIndex="1" Background="{DynamicResource TopWindowsColor}" x:Name="WindowsChromeGrid">
                                    <!--Title-->
                                    <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=Title}" 
                                               Foreground="{DynamicResource DefaultWhiteBrush}" 
                                               HorizontalAlignment="Center" 
                                               Margin="10"
                                               FontSize="15"/>
                                    <!--Window buttons-->
                                    <StackPanel Margin="1" 
                                                Orientation="Horizontal" 
                                                HorizontalAlignment="Right">
                                        <Button x:Name="MinimizeButt"  
                                                Content="_" 
                                                Style="{DynamicResource ButtonStyleWindows}" 
                                                Click="MinimizeButt_Click" 
                                                Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                                        <Button x:Name="MaximizeButt"
                                                Content="[ ]" 
                                                Style="{DynamicResource ButtonStyleWindows}" 
                                                Click="MaximizeButt_Click" 
                                                Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                                        <Button x:Name="CloseButt" 
                                                Content="X" 
                                                Margin="0,0,10,0"
                                                Style="{DynamicResource ButtonStyleWindows}" 
                                                Click="CloseButt_Click" 
                                                Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                    </StackPanel>
                                </Grid>

                                <Border Grid.Row="2" >
                                    <ContentPresenter Content="{TemplateBinding Content}" />
                                </Border>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome ResizeBorderThickness="5" CaptionHeight="35"/>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="IsTabStop"
          Value="false" />
        <Setter Property="Focusable"
          Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbStyle"
       TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="Height"
          Value="14" />
        <Setter Property="Width"
          Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse x:Name="Ellipse"
                              StrokeThickness="1" 
                              Stroke="{DynamicResource DefaultRedBrush}" 
                              Fill="{DynamicResource DefaultRedBrush}">
                    </Ellipse>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Template when the orientation of the Slider is Horizontal.-->
    <ControlTemplate x:Key="HorizontalSlider"
                 TargetType="{x:Type Slider}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto"
                     MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TickBar x:Name="TopTick"
             SnapsToDevicePixels="True"
             Placement="Top"
             Height="4"
             Visibility="Collapsed">
                <TickBar.Fill>
                    <SolidColorBrush Color="{DynamicResource DefaultWhiteColor}" />
                </TickBar.Fill>
            </TickBar>
            <Border x:Name="TrackBackground"
            Margin="0"
            CornerRadius="2"
            Height="4"
            Grid.Row="1"
            BorderThickness="1">
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0"
                             EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="{DynamicResource DefaultWhiteColor}"
                            Offset="0.0" />
                                <GradientStop Color="{DynamicResource DefaultWhiteColor}"
                            Offset="1.0" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Border.BorderBrush>
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0"
                             EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="{DynamicResource DefaultWhiteColor}"
                            Offset="0.0" />
                                <GradientStop Color="{DynamicResource DefaultWhiteColor}"
                            Offset="1.0" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Track Grid.Row="1"
           x:Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}"
                      Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}"
                      Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar x:Name="BottomTick"
             SnapsToDevicePixels="True"
             Grid.Row="2"
             Fill="{TemplateBinding Foreground}"
             Placement="Bottom"
             Height="4"
             Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement"
             Value="TopLeft">
                <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement"
             Value="BottomRight">
                <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement"
             Value="Both">
                <Setter TargetName="TopTick"
              Property="Visibility"
              Value="Visible" />
                <Setter TargetName="BottomTick"
              Property="Visibility"
              Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation"
             Value="Horizontal">
                <Setter Property="MinWidth"
              Value="104" />
                <Setter Property="MinHeight"
              Value="21" />
                <Setter Property="Template"
              Value="{DynamicResource HorizontalSlider}" />
            </Trigger>

        </Style.Triggers>
    </Style>



    <Style x:Key="{x:Type ListView}"
       TargetType="ListView">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
          Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
          Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
          Value="true" />
        <Setter Property="VerticalContentAlignment"
          Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <ScrollViewer>
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource DefaultRedTransparentColor}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="Template">
            <Setter.Value>
                <!-- Trun off default selection-->
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd" BorderBrush="{DynamicResource DefaultWhiteTransparentBrush}" 
                            BorderThickness="0,0,0,2" 
                            Margin="6,6,6,0"
                            Background="{TemplateBinding Background}" 
                            Padding="8" 
                            SnapsToDevicePixels="true"
                            >
                        <ContentPresenter 
                            HorizontalAlignment="Center" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Margin}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsMouseOver}" Value="True"  />
                                <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsSelected}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="B"/>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#10b3adcd" Duration="0:0:.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="Transparent" Duration="0:0:.25"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="A">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#fe1b48" Duration="0:0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="A"/>
                                <BeginStoryboard x:Name="B">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#48fe1b48" Duration="0:0:0:0.2" />
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#10fe1b48" Duration="0:0:0:0.2" />
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="Transparent" Duration="0:0:0:.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource DefaultWhiteTransparentBrush}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource DefaultWhiteTransparentBrush}"/>
        <Setter Property="GridLinesVisibility" Value="All"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="HeadersVisibility" Value="Column"/>

        <Style.Resources>
            <Style TargetType="DataGridColumnHeader">
                <Setter Property="Width" Value="auto"/>
                <Setter Property="Background" Value="{DynamicResource DefaultWhiteTransparentBrush}"></Setter>
                <Setter Property="FontFamily" Value="Arial"></Setter>
                <Setter Property="Foreground" Value="{DynamicResource DefaultWhiteBrush}"></Setter>
                <Setter Property="FontSize" Value="15"></Setter>
                <Setter Property="Padding" Value="5"></Setter>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="BorderThickness" Value="1.5,0,2,0"/>
                <Setter Property="BorderBrush" Value="#05b3adcd"/>
            </Style>

            <Style TargetType="DataGridCell">

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border BorderThickness="1.5,0,1.5,0"  
                                    BorderBrush="{DynamicResource DefaultWhiteTransparentBrush}">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="5"
                                                  VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>

                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Opacity="0.2" Color="Black"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="DataGridRow">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0,0,0,3"/>
                <Setter Property="BorderBrush" Value="{DynamicResource DefaultWhiteTransparentBrush}"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="FontFamily" Value="Arial"/>
                <Setter Property="Foreground" Value="{DynamicResource DefaultWhiteBrush}"/>
                <Setter Property="FontSize" Value="15"/>
            </Style>
        </Style.Resources>
    </Style>


</ResourceDictionary>